define("MsPortalImpl.Controls/Controls/Lists/Base/Controls.Lists.Focus",["require","exports","MsPortalImpl.Controls/Controls/Lists/Base/Controls.Lists.Base"],(function(t,e,s){"use strict";var i;return function(t){t.Name="focus",t.HasFocusClass="fxs-has-focus";class e extends s.Plugin{constructor(t){super(t)}dispose(){super.dispose()}}t.Plugin=e}(i||(i={})),i})),
define("MsPortalImpl.Controls/Controls/Lists/List2/ListView.Focus.ctl",["require","exports","MsPortalImpl.Controls/Controls/Lists/Base/Controls.Lists.Focus","MsPortalImpl/Interactions/Interactions.KeyboardNavigation"],(function(t,e,s,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Plugin=e.getItemWidget=void 0;function o(t){return ko.dataFor(t)}e.getItemWidget=o;class n extends s.Plugin{constructor(t){super({name:"focus",cssClass:"fxc-list-focus",widget:t})}afterSetTemplates(){this.widget.templateEngine.getHtmlTemplate("itemTemplate").addAttribute("li","data-bind",["attr:{'data-listView-focusable':true,tabindex:$tabIndex}, css: {'fxs-portal-focus': !$disabled() }"])}afterAttachEvents(){this.widget.attachEvent(this.widget.element,"click.fxcFocusing",".fxc-listView-item:not(.fxc-disabled)",((t,e)=>{const s=o($(e.target).closest(".fxc-listView-item")[0]);this._performFocusing(s)})),this.widget.attachEvent(this.widget.element,"click.fxcFocusing",".fxc-listView-checkbox",((t,e)=>{const s=o($(e.target).closest(".fxc-listView-item")[0]);this._performFocusing(s)})),this.widget.attachEvent(this.widget.element,"keydown.fxcFocusing",".fxc-listView-item:not(.fxc-disabled)",((t,e)=>{const s=$(e.target).closest(".fxc-listView-item")[0];switch(e.which){case 37:case 38:if(e.target===e.currentTarget){const t=o(this.widget.findPreviousElement(s));this._performFocusing(t)}break;case 39:case 40:if(e.target===e.currentTarget){const t=o(this.widget.findNextElement(s));this._performFocusing(t)}}})),new i.KeyboardNavigation(this.ltm,{element:this.widget.element.find(".fxc-listView-list"),tabTriggers:12,itemSelector:".fxc-listView-item:not(.fxc-disabled)",setTabIndex:(t,e)=>{t?.length&&t.each(((t,s)=>{if(s.classList.contains("fxc-listView-item")){o(s)._tabIndex(e)}else s.setAttribute("tabindex",""+e)}))}})}performFocusing(t){this._performFocusing(t)}_performFocusing(t){const e=this.widget.viewModel.focus,s=t.item;s.disabled()||e.updateCurrentItem(s)}extendListItemWidget(t,e,s){s._tabIndex=ko.observable(-1),s.context.$tabIndex=s._tabIndex}}e.Plugin=n}));