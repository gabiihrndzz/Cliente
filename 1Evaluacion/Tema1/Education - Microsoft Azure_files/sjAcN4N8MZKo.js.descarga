define("MsPortalImpl/Base/Base.Selectable2.SupplyBladeReference",["require","exports","Fx/DependencyInjection","MsPortalImpl/Base/Base.Pipeline","MsPortalImpl/Base/Base.ImplUtils","MsPortalImpl/Base/Base.Selectable2.Common"],(function(e,r,a,t,s,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.SupplyBladeReferenceHandler=void 0;MsPortalFx.Base.Diagnostics;var l=MsPortalFx.Errors;let o=class{constructor(e){this._resources=e}async fetchRequest(r,a){const t=this._resources.selectable;try{const r=await this._resources.extensionVm.fetchRequest(a.operationId);a.bladeRequest=r;const n=r.bladeReference;if(MsPortalFx.isNullOrUndefined(n))throw new l.Error("No blade reference is supplied.");t.referenceOverride&&(t.referenceOverride.bladeName===n.bladeName&&t.referenceOverride.extensionName===n.extensionName||(0,s.logToExtension)(e,d(this._resources.extensionVm),2,`The blade reference '${t.referenceOverride.extensionName}/${t.referenceOverride.bladeName}' provided to the menu blade does not match the blade reference '${n.extensionName}/${n.bladeName}' returned from supplyBladeReference.`),a.bladeRequest.bladeReference=t.referenceOverride,t.referenceOverride=null),a.bladeRequest.bladeReference={...a.bladeRequest.bladeReference,parameters:ko.toJS(a.bladeRequest.bladeReference.parameters)}}catch(a){const n=l.Error.isBaseOf(a)?a:void 0;if(t.isDisposed()||n&&0===n.errorLevel);else{const r=`supplyBladeReference failed.\r\n ${MsPortalFx.getLogFriendlyMessage(a)}`;(0,s.logToExtension)(e,d(this._resources.extensionVm,n),2,r)}r.indicateTaskComplete()}}};function d(e,r){const a=r&&r.extension,t=FxImpl.Po.getMetadataId(e);return a===MsPortalFx.getEnvironmentValue("extensionName")?t&&t.split("-")[0]:a}r.SupplyBladeReferenceHandler=o,__decorate([__metadata("fx:diagnostics",[e,"SupplyBladeReferenceHandler.prototype"]),t.Step(1),__metadata("design:type",Function),__metadata("design:paramtypes",[t.Task,n.OpenBladeTaskArgs]),__metadata("design:returntype",Promise)],o.prototype,"fetchRequest",null),r.SupplyBladeReferenceHandler=o=__decorate([__metadata("fx:diagnostics",[e,"SupplyBladeReferenceHandler"]),a.Class("pipeline"),__metadata("design:paramtypes",[n.OpenBladeResources])],o)}));