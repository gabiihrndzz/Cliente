define("MsPortalImpl/UI/UI.CreateJourney",["require","exports","Fx/Composition/Selectable","MsPortalImpl/Services/Services.AssetTypes","MsPortalImpl/UI/UI.BladeOpenerImpl","Fx/Errors"],(function(e,t,s,a,n,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createJourney=void 0;var o=MsPortalFx.Base,l=o.Diagnostics,i=l.Telemetry,d=o.Constants.BladeNames.Hubs,c=o.Constants.ExtensionNames.Hubs;const p=l.createLog(e);t.createJourney=async function(e,t,o){const l=i.startTrace({source:"Desktop",action:"JourneyOpened",name:"BladeLauncher",assetType:t.assetType});try{let l=t instanceof s.PdlBladeReference?t:void 0,i=!1;if(!l){const n=t;l=o?await async function(e,t){function n(e){const t=e?.data;return e?.status||e?.httpStatusCode||t?.status||t?.httpStatusCode}try{const n=await Promise.resolve(e.get(a.AssetTypeService)),r=await n.mapAssetIdToDynamicSelectionAndIcon({assetId:t.assetId,extensionName:t.extensionName,assetType:t.assetType},"AssetBladeLauncher"),o=r.selection;if(!o.detailBlade){const e=n.getAssetType(t.extensionName,t.assetType),s=MsPortalFx.Errors.getErrorOptions(`Blade name is missing for asset ${t.extensionName}:${t.assetType}`,{data:{assetSelector:t,selectionAndIcon:r,assetTypeReturned:e}});throw new MsPortalFx.Errors.Error(s)}return new s.PdlBladeReference(o.detailBlade,o.extension,{parameters:o.detailBladeInputs})}catch(e){e=e||new MsPortalFx.Errors.Error("Unknown error");const a=r.FxError.isBaseOf(e)&&e.innerErrors&&e.innerErrors[0],o=n(e)||n(a),l=e.message||a&&a.message||e;0!==o&&p.warning(l,1,e.data);let i=d.UnavailableAssetBlade;const u={id:"string"==typeof t.assetId?t.assetId:t.assetType};return 401===o||403===o?i=d.UnauthorizedAssetBlade:404===o&&(i=d.NotFoundAssetBlade),new s.PdlBladeReference(i,c,{parameters:u})}}(e,n):new FxImpl.Composition.Selectable.PdlBladeReference(t.detailBlade,n.extension,{parameters:n.detailBladeInputs,onClosed:n.onClosed}),l.context=n.openedByContext,l.menuId=n.defaultMenuItemId,l.disableRebind=!0,i=n.openInContextPane}let u=8;u|=i&&1,await e.get(n.BladeOpener).openBlade(l,{flags:u})}finally{i.completeTrace(l)}}}));