define("MsPortalImpl/Auth/MsalJsWrapperV2",["require","exports","@azure/msal-browser-1p-v2"],(function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logoutRedirect=t.getAllAccounts=t.acquireTokenRedirect=t.ssoSilent=t.acquireTokenPopup=t.acquireTokenSilent=t.initialize=t.handleRedirectPromise=t.initializeBrokering=t.initializePublicClientApplication=t.AuthError=t.InteractionRequiredAuthError=t.Configuration=t.AccountInfo=t.AuthenticationScheme=t.AuthenticationResult=t.ExperimentalPublicClientApplication=void 0;var a=MsPortalFx.Base.Diagnostics,n=a.Telemetry;t.ExperimentalPublicClientApplication=i.ExperimentalPublicClientApplication,t.AuthenticationResult=i.AuthenticationResult,t.AuthenticationScheme=i.AuthenticationScheme,t.AccountInfo=i.AccountInfo,t.Configuration=i.Configuration,t.InteractionRequiredAuthError=i.InteractionRequiredAuthError,t.AuthError=i.AuthError;const r=FxImpl.internalEnv,o=a.createLog(e),s=fx.environment.auth,l=i.InteractionType.Redirect,c=window.location.origin;function u(e,t){const a=t||"organizations",s={auth:{clientId:e,authority:(l=r.fxAadAuthority,MsPortalFx.ensureSuffix(l,"/")+a)},cache:{cacheLocation:"sessionStorage",storeAuthStateInCookie:!1},system:{loggerOptions:{logLevel:i.LogLevel.Verbose,loggerCallback:(e,t,a)=>{if(MsPortalFx.isFeatureEnabled("enableauthtelemetry")){if(a)return r={action:"MsalLoggerCallbackPii",data:{level:e}},void n.trace({source:"MsalJsWrapper",action:r.action,data:r.data});switch(e){case i.LogLevel.Error:return void o.error(t);case i.LogLevel.Info:case i.LogLevel.Verbose:return void o.verbose(t);case i.LogLevel.Warning:return void o.warning(t)}}var r}}}};var l;return MsPortalFx.isFeatureEnabled("nativebroker")&&(s.system.allowNativeBroker=!0),s}t.initializePublicClientApplication=function(e,i){let a;return a=e===s.portalClientId?{brokerOptions:{actAsBroker:!0,preferredInteractionType:l,brokerMessageTimeout:6e4}}:{brokerOptions:{preferredInteractionType:l,allowBrokering:!0,trustedBrokerDomains:[c],brokerMessageTimeout:6e4}},new t.ExperimentalPublicClientApplication(u(e,i),a,{performanceTelemetryConfiguration:{disabled:!0}})},t.initializeBrokering=async function(e){const{msalObj:t,correlationId:i,spaAuthCode:a,spaAccountId:n}=e;return a?await t.initializeBrokering({codeRequest:{code:a,correlationId:i}}):n?await t.initializeBrokering({codeRequest:{nativeAccountId:n,correlationId:i}}):await t.initializeBrokering()},t.handleRedirectPromise=async function(e,t){return await e.handleRedirectPromise(t)},t.initialize=async function(e){return await e.initialize()},t.acquireTokenSilent=async function(e){const{authority:i,scopes:a,msalObj:n,userAccountInfo:r,correlationId:o,sshTokenData:s,popTokenData:l,claims:c,forceRefresh:u}=e;let p={account:r,scopes:a,authority:i,correlationId:o,claims:c,forceRefresh:u,cacheLookupPolicy:0};return s&&(p={...p,authenticationScheme:t.AuthenticationScheme.SSH,sshJwk:s.jwk,sshKid:s.kid}),l&&(p={...p,...l,authenticationScheme:t.AuthenticationScheme.POP}),MsPortalFx.isFeatureEnabled("nativebroker")&&(p={...p,extraQueryParameters:{webnativebridge:"true"}}),await n.acquireTokenSilent(p)},t.acquireTokenPopup=async function(e){const{scopes:i,msalObj:a,userAccountInfo:n,correlationId:r,sshTokenData:o,popTokenData:s,claims:l}=e;let c={account:n,scopes:i,correlationId:r,claims:l};return o&&(c={...c,authenticationScheme:t.AuthenticationScheme.SSH,sshJwk:o.jwk,sshKid:o.kid}),s&&(c={...c,...s,authenticationScheme:t.AuthenticationScheme.POP}),MsPortalFx.isFeatureEnabled("nativebroker")&&(c={...c,extraQueryParameters:{webnativebridge:"true"}}),await a.acquireTokenPopup(c)},t.ssoSilent=async function(e){const{scopes:i,msalObj:a,userAccountInfo:n,correlationId:r,popTokenData:o}=e;let s={account:n,scopes:i,correlationId:r,...o};return o&&(s={...s,authenticationScheme:t.AuthenticationScheme.POP}),await a.ssoSilent(s)},t.acquireTokenRedirect=async function(e){const{scopes:i,msalObj:a,userAccountInfo:n,correlationId:r,sshTokenData:o,popTokenData:s,claims:l,redirectUri:c}=e;let u={account:n,scopes:i,correlationId:r,claims:l,redirectUri:c};return o&&(u={...u,authenticationScheme:t.AuthenticationScheme.SSH,sshJwk:o.jwk,sshKid:o.kid}),s&&(u={...u,...s}),MsPortalFx.isFeatureEnabled("nativebroker")&&(u={...u,extraQueryParameters:{webnativebridge:"true"}}),await a.acquireTokenRedirect(u)},t.getAllAccounts=function(e){return e.getAllAccounts()},t.logoutRedirect=function(e){return e.msalObj.logoutRedirect({onRedirectNavigate:()=>!1})}})),
define("MsPortalImpl/Services/PortalAuthHandlerV2",["require","exports","Fx/Composition","Fx/Redirect","MsPortalImpl/Resources/ImplScriptResources","MsPortalImpl/Auth/MsalJsWrapperV2","MsPortalImpl/UI/UI.DialogManager"],(function(e,t,i,a,n,r,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEV=t.MsalClientAuth=void 0;var s=MsPortalFx.Base,l=s.Diagnostics,c=FxImpl.Security,u=l.Telemetry,p=s.Net2,d=s.Resources,h=s.UriBuilder,m=s.QueryStringBuilder;const g=window,k=l.createLog(e),f=MsPortalFx.encodeHtml,x=u.endTrace,A=u.cancelTrace,P=fx.environment,I=P.auth,T=I.portalClientId,w=c.tokenErrors,C=d.getAppRelativeUri("/api/PortalAuthorization/ProvisionServicePrincipal"),M=fx.internalEnv.portalApplicationUri+"/Error",b=MsPortalFx.newGuid(),S=n.Shell.Dialogs,y=P.links.aadErrorCodes,R=new Map([["50057:",w.accountDisabled],["50001:",w.appNotProvisioned],["500014:",w.appNotProvisioned],["1001010:",w.appNotProvisioned],["broker_timeout",w.brokerTimeout],["70002:",w.credentialsExpired],["50173:",w.credentialsExpired],["50135:",w.credentialsExpired],["53000:",w.deviceUncompliant],["500113:",w.missingBrokerReplyUrl],["700046:",w.missingBrokerReplyUrl],["50076:",w.requiresMFA],["50078:",w.requiresMFA],["50079:",w.requiresMFA],["50158:",w.requiresMFA],["70008:",w.sessionEnded],["50132:",w.sessionEnded],["70043:",w.sessionEnded],["50020:",w.passthroughUserError]]);let _;try{_=JSON.parse(MsPortalImpl.sessionStorage.getItem("InteractionRequiredErrorSeenMap")||null)||Object.create(null)}catch{_=Object.create(null)}function E(e){u.trace({source:"PortalAuthHandler",action:e.action,actionModifier:e.actionModifier,name:e.name,data:e.data})}function v(e,t){u.trace({source:"PortalAuthHandler",action:t.action,actionModifier:e,data:t.data})}function F(e){return u.start({source:"PortalAuthHandler",action:e.action,name:e.name})}function q(){try{const e=JSON.stringify(_);MsPortalImpl.sessionStorage.setItem("InteractionRequiredErrorSeenMap",e)}catch(e){u.trace({source:"PortalAuthHandler",action:"StoreInteractionRequiredErrorSeenMap",actionModifier:"Failed",data:{error:MsPortalFx.getLogFriendlyMessage(e)}})}}function O(e){if(!e)return null;if(!e.startsWith("Bearer"))return E({action:"parseWwwAuthHeader",data:{reason:"InvalidPrefix",prefix:e.slice(0,7)}}),null;let t="",i="",a="",n=-1;return e.substring(7).split(",").forEach((e=>{const r=/^(.+)="(.*)"$/.exec(e.trim());if(n=r?.length,3===n){const e=r[2];switch(r[1]){case"authorization_uri":t=e;break;case"error":i=e;break;case"claims":a=atob(e)}}})),E({action:"parseWwwAuthHeader",data:{authorization_uri:t,error:i,includesClaims:!!a,regexCount:n}}),a}function z(e,t){let i=Object.create(null);if(e)try{i=JSON.parse(e)}catch(e){E({action:"parsingClaimsFailed",name:t,data:{error:e}})}const a=i.access_token=i.access_token||{},n=a.xms_cc=a.xms_cc||{};return(n.values=n.values||[]).push("cp1"),JSON.stringify(i)}function D(e){const t=(e||{}).message||"";let i=w.unknown;return R.forEach(((e,a)=>{t.includes(a)&&(i=e)})),{status:i,errorMessage:t,authHeader:null,expiresAt:null,expiresInMs:null}}class B{constructor(e,t,i){if(this._authStateManager=e,this._windowManager=t,this._dialogManager=i,this._extensionPCAppCache=new Map,this._modalDialogCopyTextErrors=[],this._portalAppInitRetryCounter=0,this._stalledPromise=null,!MsPortalFx.isFeatureEnabled("msaljs"))return;const a=e.bootstrapState,n=e.bootstrapState.user;this._currentTenantId=n.tenantId,this._currentPreferredUsername=n.preferredUsername,this._loginReplyUrlPath=a.loginReplyUrlPath,this._lastRefreshTokenRenewalTime=a.createdOn,this._portalPCAppPromise=this._initializePortalPCApp(),this._portalPCAppPromise.then((e=>{e&&MsPortalImpl.sessionStorage.removeItem("spaAuthCodeRenewed")}))}static getInstance(e,t,i){return B._instance||(B._instance=new B(e,t,i.get(o.DialogManager))),B._instance}async acquireTokenForPortal(e){if(!MsPortalFx.isFeatureEnabled("msaljs"))throw"Unsupported function 'acquireTokenForPortal' called with feature.msaljs=false.";const{scopes:t,wwwAuthHeader:i,addXmsCcClaim:a,popTokenData:n,isBackground:r}=e,o=F({action:"portalTokenRequest",name:T});let s="";i&&(s=O(i)),a&&(s=z(s,T));const l=await this._portalPCAppPromise,c=this._userAccountInfo;if(!l||!c)return A(o,{reason:"missingPrereqsForTokenRequestForPortal",scopes:t,isPortalPublicClientAppInitialized:!!l,isUserAccountInfoInitialized:!!c,addXmsCcClaim:a,includesWwwAuthHeader:!!i}),null;const u=await this._handleTokenRequest({appId:T,msalClientObject:l},{authority:MsPortalFx.ensureSuffix(FxImpl.internalEnv.fxAadAuthority,"/")+this._currentTenantId,scopes:t,isBackground:r,claims:s,forceRefresh:this._authStateManager.bootstrapState.forceSignIn,popTokenData:n});return x(o,!!u?.authHeader,{scopes:t,addXmsCcClaim:a,includesWwwAuthHeader:!!i}),u}async acquireTokenForExtension(e){if(!MsPortalFx.isFeatureEnabled("msaljs"))throw"Unsupported function 'acquireTokenForExtension' called with feature.msaljs=false.";const{extensionClientId:t,scopes:i,tenantId:a,wwwAuthHeader:n,sshTokenData:r,popTokenData:o,addXmsCcClaim:s,isBackground:l}=e,c=this._currentTenantId,u={scopes:i,extensionClientId:t,customTenantId:a,addXmsCcClaim:s,correlationId:b,includesWwwAuthHeader:!!n,includesSshTokenData:!!r,includesPopTokenData:!!o},p=F({action:"extensionTokenRequest",name:t});let d="";n&&(d=O(n)),s&&(d=z(d,T));const h=this._extensionPCAppCache.get(t);let m=h;if(!m||a!==c)try{m=await this._initializeExtensionPCApp(t,b,a)}catch(e){return{status:w.unknown,errorMessage:e,authHeader:null,expiresAt:null,expiresInMs:null}}const g=this._userAccountInfo;if(!m||!g)return A(p,{reason:"missingPrereqsForTokenRequestForExtension",isExtensionPublicClientAppInitialized:!!m,isUserAccountInfoInitialized:!!g,...u}),null;const k=this._authStateManager.bootstrapState.forceSignIn||a&&a!==this._currentTenantId,f=await this._handleTokenRequest({appId:t,msalClientObject:m},{authority:MsPortalFx.ensureSuffix(FxImpl.internalEnv.fxAadAuthority,"/")+(a||c),scopes:i,isBackground:l,sshTokenData:r,popTokenData:o,claims:d,forceRefresh:k,customTelemetryData:{isCachedExtensionPublicClientApp:!!h}});return x(p,!!f?.authHeader,u),f}async localLogout(){const e=await this._portalPCAppPromise;return r.logoutRedirect({msalObj:e})}async _initializePortalPCApp(){if(!this._currentTenantId)throw"No tenant ID was passed when initializing the portal public client application using MSAL.js";const e=F({action:"portalAppInit",name:T});let t="PortalAuthHandler.UnkownError";const i=r.initializePublicClientApplication(T,this._currentTenantId);MsPortalFx.isFeatureEnabled("nativebroker")&&(k.verbose("[Native broker] InitializePortalPCApp - Before calling initialize"),await r.initialize(i),k.verbose("[Native broker] InitializePortalPCApp - Initialize complete"));try{const t=this._authStateManager.bootstrapState.spaAuthCode;let a;k.verbose("[Native broker] InitializePortalPCApp - Before calling initializeBrokering"),await r.initializeBrokering({msalObj:i,correlationId:b,spaAuthCode:t}),k.verbose("[Native broker] InitializePortalPCApp - initializeBrokering complete"),t&&this._authStateManager.clearSpaAuthCode();try{const e=JSON.parse(MsPortalImpl.sessionStorage.getItem("Redirect_BootParameters")||"{}");e.msalHash&&(a=e.msalHash,MsPortalImpl.sessionStorage.setItem("Redirect_BootParameters",JSON.stringify({...e,msalHash:""})))}catch(e){}const l=await r.handleRedirectPromise(i,a);if(l){if(l.account)return x(e,!0,{reason:"portalAppInit_CompleteViaRedirectPromise",correlationId:b}),this._userAccountInfo=l.account,i;k.error("Calling 'handleRedirectPromise' returned an AuthenticationResult object with a missing 'account' property. This is an error in the MSAL.js library.")}else{const t=(n=r.getAllAccounts(i),o=this._currentTenantId,s=this._currentPreferredUsername,n&&n.length>0?MsPortalFx.find(n,(e=>e.tenantId===o&&e.username===s)):null);if(t)return x(e,!0,{reason:"portalAppInit_CompleteViaAccountsSearch",correlationId:b}),this._userAccountInfo=t,i}}catch(i){t=(i.message||i).replace(/<.*?>/g,"[REDACTED_TEXT]");const n=++this._portalAppInitRetryCounter,r=MsPortalImpl.sessionStorage.getItem("spaAuthCodeRenewed");if(A(e,{reason:`portalAppInit_Failed_${n}`,correlationId:b,spaAuthCodeRenewed:r,exceptionMessage:t}),t.includes("AADSTS70008:")){if(!r)return MsPortalImpl.sessionStorage.setItem("spaAuthCodeRenewed","true"),await a.forceSignIn({reason:"Renew the SPA auth code in this user's session."}),null}else if(n<=3)return await this._initializePortalPCApp()}var n,o,s;const l=new h(M);return l.path+="/SigninFailed",l.fragment=window.location.hash,l.query=(new m).setParameters({aadAuthority:FxImpl.internalEnv.fxAadAuthority,aadErrorDetails:t}),MsPortalImpl.sessionStorage.removeItem("spaAuthCodeRenewed"),this._windowManager.redirect({uri:l.toString(),redirectAction:3,reason:"PortalAppInitFailed"}),null}async _initializeExtensionPCApp(e,t,i){const a=await this._portalPCAppPromise,n=this._userAccountInfo,o={extensionClientId:e,correlationId:t},s=F({action:"extensionAppInit",name:e});if(!a||!n)return E({action:"missingPrereqsForExtensionInit",name:e,data:{isPortalPublicClientAppInitialized:!!a,isUserAccountInfoInitialized:!!n}}),null;const l=r.initializePublicClientApplication(e,i||this._currentTenantId);MsPortalFx.isFeatureEnabled("nativebroker")&&(k.verbose(`[Native broker] InitializeExtensionPCApp - ${e} - Before calling initialize`),await r.initialize(l),k.verbose(`[Native broker] InitializeExtensionPCApp - ${e} - initialize complete`));try{return k.verbose(`[Native broker] InitializeExtensionPCApp - ${e} - Before calling initializeBrokering`),await r.initializeBrokering({msalObj:l,correlationId:t}),k.verbose(`[Native broker] InitializeExtensionPCApp - ${e} - initializeBrokering complete`),await r.handleRedirectPromise(l),i||this._extensionPCAppCache.set(e,l),x(s,!0,o),l}catch(t){throw x(s,!1,o),new MsPortalFx.Errors.Error({message:`Initialization of extension '${e}' has failed with the following error: `+MsPortalFx.getLogFriendlyMessage(t),innerErrors:t})}}async _handleTokenRequest(e,t){const{appId:i}=e,a=await this._handleTokenRequestHelper(e,t,this._userAccountInfo,this._loginReplyUrlPath);return a.status===w.appNotProvisioned&&!t.scopes.some((e=>e.includes(I.armAadResource)))&&i!==T&&await async function(e){const t=F({action:"ProvisionServicePrincipal",name:e});let i="";try{i=(await p.postJSON({uri:C,dataType:"json",setAuthorizationHeader:!0,performRetry:!1},{extensionClientId:e})).errorMessage}catch(t){i=`Failed to provision service principal for the extension application '${e}' in the current tenant.Details: ${MsPortalFx.getLogFriendlyMessage(t)}.`}const a=!i;return x(t,a,{extensionClientId:e,errorMessage:i}),a}(i)?await this._handleTokenRequestHelper(e,t,this._userAccountInfo,this._loginReplyUrlPath):a}async _handleTokenRequestHelper(e,t,a,n){const{msalClientObject:o}=e,{authority:s,customTelemetryData:l,claims:c,sshTokenData:u,popTokenData:p,forceRefresh:d,isBackground:h}=t,m=t.scopes||p.scopes,{clientId:k,clientCapabilities:A}=o.getConfiguration().auth,P=Date.now()-this._lastRefreshTokenRenewalTime>=432e5,I={authority:s,clientCapabilities:A,clientId:k,correlationId:b,includesPopTokenData:!!p,includesSshTokenData:!!u,lastRefreshTokenRenewalTime:this._lastRefreshTokenRenewalTime,useSsoSilent:P,scopes:m},C={msalObj:o,correlationId:b,authority:s,scopes:m,userAccountInfo:a,claims:c,sshTokenData:u,popTokenData:p,forceRefresh:d},M=(e,t,i,a,n)=>{v("authorized",{action:"tokenRequestSuccess",data:{...I,...l,tokenFetchMethod:i,includesAccessToken:e,tokenType:t,expiresOn:a,expiresInMs:a?a.getTime()-Date.now():void 0,extExpiresOn:n,extExpiresInMs:n?n.getTime()-Date.now():void 0}})},R=e=>{v("unauthorized",{action:"tokenRequestFailure",data:{...I,...l,exceptionErrorCode:e.errorCode,exceptionErrorMessage:e.message,exceptionMessage:e.message,exceptionStack:e.stack}})},O=async e=>{if(this._stalledPromise){E({action:e,actionModifier:"BeginWait"});const t=await this._stalledPromise;return E({action:e,actionModifier:"EndWait"}),t}return null};await O("beforeAcquireTokenSilentCall");let z="";try{let e;z=F({action:"acquireTokenSilent",name:k}),p||P?(P&&(this._lastRefreshTokenRenewalTime=Date.now(),C.forceRefresh=!0),e=await r.ssoSilent(C)):e=await r.acquireTokenSilent(C),M(!!e.accessToken,e.tokenType,"acquireTokenSilent",e.expiresOn,e.extExpiresOn),x(z,!0,{tokenType:e.tokenType,scope:m[0],expiresOn:e.expiresOn,extExpiresOn:e.extExpiresOn,fromCache:e.fromCache,pageVisible:this._authStateManager.getPageVisibility()});const t=m[0].slice(0,-9);if(!await FxImpl.Security.validateTokenClaims({token:`${e.tokenType} ${e.accessToken}`,expectedClaims:{aud:t,appId:k},msalExpiresAtInMs:e.expiresOn.getTime(),telemetrySource:"PortalAuthHandler_1"})){this.localLogout(),e=await r.acquireTokenSilent(C);const i=await FxImpl.Security.validateTokenClaims({token:`${e.tokenType} ${e.accessToken}`,expectedClaims:{aud:t,appId:k},msalExpiresAtInMs:e.expiresOn.getTime(),telemetrySource:"PortalAuthHandler_2"});M(!!e.accessToken,e.tokenType,"acquireTokenSilent_RepeatedCall",e.expiresOn,e.extExpiresOn),E({action:"acquireTokenSilent_RepeatedCall",actionModifier:i?"valid":"invalidExpiration",data:{scope:m[0],tokenType:e.tokenType,expiresOn:e.expiresOn,extExpiresOn:e.extExpiresOn,fromCache:e.fromCache,pageVisible:this._authStateManager.getPageVisibility()}})}const{accessToken:i,expiresOn:a,tokenType:n}=e;return{authHeader:`${n} ${i}`,expiresAt:a.getTime(),expiresInMs:a.getTime()-Date.now()}}catch(e){let t=e;if(R(t),x(z,!1,{scope:m[0],pageVisible:this._authStateManager.getPageVisibility()}),h)return{status:w.unknown,errorMessage:t.message,authHeader:null,expiresAt:null,expiresInMs:null};let a=t.message.includes("AADSTS700084:");if(a){let e="";try{e=F({action:"ssoSilent_RefreshTokenExpired",name:k});const t=await r.ssoSilent(C),{accessToken:i,expiresOn:a,extExpiresOn:n,tokenType:o,fromCache:s}=t;return M(!!i,o,"ssoSilent_RefreshTokenExpired",a,n),x(e,!0,{scope:m[0],tokenType:o,fromCache:s,pageVisible:this._authStateManager.getPageVisibility()}),{authHeader:`${o} ${i}`,expiresAt:a.getTime(),expiresInMs:a.getTime()-Date.now()}}catch(i){R(i),x(e,!1,{scope:m[0],pageVisible:this._authStateManager.getPageVisibility()}),t=i,a=i.message.includes("AADSTS700084:")}}const o=t instanceof r.InteractionRequiredAuthError;if(o||a){const e=f(t.message),s=async()=>{E({action:"detectedInteractionRequiredAuthError",data:{isRefreshTokenExpired:a}});const o=Promise.withResolvers(),s=Object.create(null);if(y&&(s.learnMoreText=S.learnMore,s.onClickLearnMore=new i.ClickableLink(y,"_blank",null,MsPortalFx.noop,"AadErrorCodes")),this._modalDialogCopyTextErrors.push({errorMessage:e,clientId:k,scopes:m}),this._stalledPromise){const e=await O("uponConsecutiveInteractionRequiredError");if(4!==e.dialogResult)return{dialogResult:e.dialogResult,tokenResult:{status:w.unknown,errorMessage:t.message,authHeader:null,expiresAt:null,expiresInMs:null}}}E({action:"displayingModalDialog",data:{scope:m[0]}});const l=await this._dialogManager.showModalDialog({title:S.claimsErrorGenericTitle,description:S.claimsErrorGenericDescription.format(`${e}`,y?'<a class="msportalfx-ext-link" href="" data-bind="text: learnMoreText, fxclick: onClickLearnMore"></a>':"")+'<div class="fxt-copy"><a href="#" data-bind="text: copyText, click: copyClick"></a></div>',templateViewModel:MsPortalFx.extend2(s,{copyText:S.copyText,copyClick:()=>{const e=FxImpl.createElement("pre");e.textContent=JSON.stringify({sessionId:MsPortalFx.sessionId,errors:this._modalDialogCopyTextErrors},null,2),document.body.appendChild(e);const t=g.getSelection();t.removeAllRanges();const i=document.createRange();i.selectNodeContents(e),t.addRange(i),g.document.execCommand("copy"),e.remove()}}),defaultButtonText:S.claimsErrorButtonText,cancelButtonText:S.connectionErrorCancelButtonText,buttons:2,uiShield:{hidePromise:o.promise}});if(this._modalDialogCopyTextErrors=[],4!==l)return o.resolve(),{dialogResult:l,tokenResult:{status:w.unknown,errorMessage:t.message,authHeader:null,expiresAt:null,expiresInMs:null}};E({action:"initiatingAcquireTokenRedirect",data:{scope:m[0]}}),MsPortalImpl.sessionStorage.setItem("forceSignIn","true"),this._authStateManager.clear();try{if(k.toLowerCase()===T)return await r.acquireTokenRedirect({...C,redirectUri:n}),null;const{accessToken:e,expiresOn:t,extExpiresOn:i,tokenType:a}=await r.acquireTokenPopup(C);return M(!!e,a,"acquireTokenPopup",t,i),{dialogResult:l,tokenResult:{authHeader:`${a} ${e}`,expiresAt:t.getTime(),expiresInMs:t.getTime()-Date.now()}}}catch(e){return R(e),{dialogResult:l,tokenResult:D(e)}}};if(MsPortalFx.isFeatureEnabled("forcemsaljstokenfetch")&&!p&&!u&&o){if(_[k]=_[k]?_[k]:Object.create(null),_[k][m[0]])return _[k][m[0]]=null,q(),D(t);_[k][m[0]]=!0,q()}this._stalledPromise=s();const l=await this._stalledPromise;return this._stalledPromise=null,l.tokenResult}return D(t)}}}t.MsalClientAuth=B}));