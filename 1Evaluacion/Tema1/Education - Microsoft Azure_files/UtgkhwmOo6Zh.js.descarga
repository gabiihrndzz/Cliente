define("MsPortalImpl/Base/Base.Selectable2.Pipeline",["require","exports","Fx/DependencyInjection","MsPortalImpl/Base/Base.Pipeline","MsPortalImpl/Base/Base.Selectable2.Common"],(function(e,t,a,n,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.OpenBladeRequestHandler=void 0;var o=FxImpl.shellInterface;let l=class{constructor(e){this._resources=e}createSelection(e,t){if(!this._resources.selectable.isSelected())return void e.indicateTaskComplete();let a;const n=t.bladeRequest.bladeReference,{operationId:s}=t.bladeRequest,l=n&&n.options&&n.options.onClosed;if(l&&s){const e=this._resources.callbacks;e.push({id:s,fn:l}),a=(t,a)=>{Promise.resolve(l(t,a)).finally((()=>{e.remove((e=>e.id===s))}))}}let d;n.options?.callbacks&&(d=e=>{FxImpl.invokeCallback(n,"onOutputsChanged",[e])}),t.selection=function(e,t,a,n){const s=e.bladeReference,{flags:l,operationId:d}=e,r=s.parameters,i=s.metadata||{},p=3===e.reason,c=function(e,t){if(t){const t=e.options||{},a=(e.metadata||{}).outputParameters||[];return!t.onClosed&&!a.length&&!function(e){const t=o(e);return t&&20560===t.type}(e)}return!0}(s,p);let u=0;return!c&&(u|=2),p&&(u|=4),2&l&&(u|=8),4&l&&(u|=128),32&l&&(u|=256),s.disableRebind&&(u|=64),8&l&&(u|=64),256&l&&(u|=512),512&l&&(u|=1024),1024&l&&(u|=2048),2048&l&&(u|=4096),{timestamp:e.timestamp,detailBlade:s.bladeName,extension:s.extensionName,detailBladeInputs:r||{},openInContextPane:!!(1&l)||i.isContextBlade,persistentContextPane:i.persistentContextPane,flags:u,operationId:d,onClosed:a,telemetryName:e.telemetryName,context:s.context||e.context,defaultMenuItemId:s.menuId,contentBladeReference:s.contentBladeReference,notifyBladeOpenCompleted:t,outputs:s.metadata?.outputParameters,outputsChanged:n}}(t.bladeRequest,t.notifyBladeOpenCompleted,a,d)}postSelection(e,t){this._resources.selectedValue(t.selection)}};t.OpenBladeRequestHandler=l,__decorate([__metadata("fx:diagnostics",[e,"OpenBladeRequestHandler.prototype"]),n.Step(3),__metadata("design:type",Function),__metadata("design:paramtypes",[n.Task,s.OpenBladeTaskArgs]),__metadata("design:returntype",void 0)],l.prototype,"createSelection",null),__decorate([__metadata("fx:diagnostics",[e,"OpenBladeRequestHandler.prototype"]),n.Step(5),__metadata("design:type",Function),__metadata("design:paramtypes",[n.Task,s.OpenBladeTaskArgs]),__metadata("design:returntype",void 0)],l.prototype,"postSelection",null),t.OpenBladeRequestHandler=l=__decorate([__metadata("fx:diagnostics",[e,"OpenBladeRequestHandler"]),a.Class("pipeline"),__metadata("design:paramtypes",[s.OpenBladeResources])],l)}));